const Calendar = require("../models/Calendar");

// üîπ –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ
exports.createEvent = async (req, res) => {
  try {
    const { title, desc } = req.body;
    if (!title || !desc) {
      return res.status(400).json({ error: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
    }
    const newEvent = new Calendar({ title, desc });
    await newEvent.save();
    res.status(201).json(newEvent);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
exports.getAllEvents = async (req, res) => {
  try {
    const events = await Calendar.find();
    res.json(events);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// üîπ –ü–æ–ª—É—á–∏—Ç—å –æ–¥–Ω–æ —Å–æ–±—ã—Ç–∏–µ –ø–æ ID
exports.getEventById = async (req, res) => {
  try {
    const event = await Calendar.findById(req.params.id);
    if (!event) {
      return res.status(404).json({ error: "–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" });
    }
    res.json(event);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// üîπ –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
exports.updateEvent = async (req, res) => {
  try {
    const { title, desc } = req.body;
    const updatedEvent = await Calendar.findByIdAndUpdate(
      req.params.id,
      { title, desc },
      { new: true }
    );
    if (!updatedEvent) {
      return res.status(404).json({ error: "–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" });
    }
    res.json(updatedEvent);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// üîπ –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
exports.deleteEvent = async (req, res) => {
  try {
    const deletedEvent = await Calendar.findByIdAndDelete(req.params.id);
    if (!deletedEvent) {
      return res.status(404).json({ error: "–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" });
    }
    res.json({ message: "–°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ" });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};
